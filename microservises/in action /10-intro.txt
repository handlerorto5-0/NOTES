Соберите воедино то, что меняется по одним и тем же причинам. Разделяйте те вещи, которые меняются по разным причинам.
(Robert C. Martin’s Single Responsibility Principle)

- Микросервисы - это и архитектурный стиль, и набор культурных практик, основанный на пяти ключевых принципах: автономность, устойчивость, прозрачность, автоматизация и согласованность.
- Микросервисы уменьшают трение при разработке, обеспечивая автономность, техническую гибкость и слабую связь.
- Разработка микросервисов может быть сложной задачей из-за необходимости адекватного знания предметной области и баланса приоритетов между командами.
- Сервисы предоставляют контракты другим сервисам. Хорошие контракты краткие, полные и предсказуемые.
- Сложность в давно работающих программных системах неизбежна, но вы можете стабильно приносить пользу в этих системах, если сделаете выбор, сводящий к минимуму трение и риски.
- Надежное безаварийное («утомительное») развертывание снижает риск микросервисов, делая выпуски автоматизированными и доказываемыми.
- Контейнеры абстрагируются от различий между сервисами во время выполнения, упрощая крупномасштабное управление разнородными микросервисами.
- Отказ неизбежен: микросервисы должны быть прозрачными и наблюдаемыми, чтобы команды могли проактивно управлять, понимать и владеть работой сервиса ... и ее отсутствием.
- Команды, внедряющие микросервисы, должны быть функционально зрелыми и сосредоточиваться на всем жизненном цикле службы, а не только на этапах проектирования и сборки.