Cygwin
Действие	Windows	Cygwin
Список директорий							dir					ls
Очистить консоль							cls					clear
Копировать файлы							copy				cp
Переместить файлы							move				mv
Удалить файлы									del					rm
Создать директорию 						md					mkdir
Удалить директорию						rd					rm -rf
Изменить текущую директорию		cd					cd
Текущая директория						cd, chdir		pwd
Поиск													find				grep
Соединения										cat					cat
Разрешения										chmod				chmod
Дисплей/вывод текста					echo				echo

ПРИМЕРЫ

Несколько примеров использования некоторых утилит.

Допустим, у Вас есть текстовый файл in.txt. Посчитать количество слов в нем Вы можете так:

wc -w in.txt

Количество строк:

wc -l in.txt

Найти строки, содержащие последовательность символов Larry:

grep 'Larry' in.txt

Разбить строки на слова, заменяя пробелы на символы конца строки:

cat in.txt | gawk 'gsub(" +","\n")'

Команда gawk 'gsub(" +","\n")' значит — заменить один или больше пробелов (" +") на символ конца строки ("\n").

Сделать то же самое, но с возможностью удобного просмотра (PageUp, PageDown, выйти — q)

cat in.txt | gawk 'gsub(" +","\n")' | less

Отсортировать строки (слова):

cat in.txt | gawk 'gsub(" +","\n")' | sort | less

Убрать одинаковые строки (слова):

cat in.txt | gawk 'gsub(" +","\n")' | sort | uniq | less

Подсчитать количество уникальных строк (слов):

cat in.txt | gawk 'gsub(" +","\n")' | sort | uniq | wc -l

Убрать одинаковые строки (слова), считая их количество:

cat in.txt | gawk 'gsub(" +","\n")' | sort | uniq --count | less

Опять отсортировать, получив, таким образом, частотный словник текста:

cat in.txt | gawk 'gsub(" +","\n")' | sort | uniq --count | sort -r | less

То же самое, с выводом результатов в текстовый файл:

cat in.txt | gawk 'gsub(" +","\n")' | sort | uniq --count | sort -r > out.txt

То же самое, с сохранением промежуточных результатов в файле intermediate.txt:

cat in.txt | gawk 'gsub(" +","\n")' | tee intermediate.txt | sort | uniq --count | sort -r | less

Теперь, используя возможности Bash, можно повторить эту команду для нескольких файлов. Набирайте скрипт прямо в консоли, переходя на новую строку так, как это напечатано в статье, — Bash поймет, что команда не закончена и сменит приглашение на '>':

for file in *.txt; do

cat $file | gawk 'gsub(" +","\n")' | sort | uniq --count | sort -r > $file.out

echo $file done

done

Вот так. Простые задачи — простые решения.

Чтобы узнать, как работает та или иная команда, можно запустить ее с ключом --help либо воспользоваться командой man (manual) — man awk, man grep. Выйти из man можно с помощью q.
