четыре встроенные структуры данных список, кортеж, словарь и множество
Список: упорядоченная изменяемая коллекция
Словарь: неупорядоченное множестао пар ключ-значение, можно динамически изменять.
Множество: неупорядоченный набор неповторяющихся объектов
Кореж: упорядоченная неизменяемая коллекция объектов
l = list()  - []         пустой список
d = dict()  - {}         пустой словарь
s = set()   - set()      пустое множество
t = tuple() - ()         пустой кортеж
----------------------------------------------------
3 Словари Dict
person1 = { 'Name': 'Ivan Ivanov',
            'Gender': 'Male',
            'Occupation': 'Researcher',
            'Home Planet': 'Betelgeuse Seven' }

person1['Name'] доступ к данным
person1['Age'] = 22  добавить пару

Итерации:
for key in person1:
	print (key, 'has value', person1[key],'.')

for k in found:
    print(k, 'was found', found[k], 'time(s).')
sorted(dict) сортирует по алфавиту
for k in sorted(found):  
    print(k, 'was found', found[k], 'time(s).')
items() — возвращает список пар ключ/значение
for k, v in sorted(found.items()):
    print(k, 'was found', v, 'time(s).')

Предотвращение ошибок KeyError во время выполнения
Не забывайте инициализировать ключ перед использованием
if 'bananas' in fruits:
	fruits['bananas'] += 1
else:
	fruits['bananas'] = 1 инициализация
или с not in
if 'pears' not in fruits:
    fruits['pears'] = 0
fruits['pears'] +=1
или с методом setdefault
fruits.setdefault('pears', 0)
fruits['pears'] +=1
---------------------------------------------------------------------------
Множество Set:
множество — это структура данных,главной особенностью является автоматическое удаление повторяющихся значений.
vowels = { 'a', 'e', 'e', 'i', 'o', 'u', 'u' }
vowels2 = set('aeeiouu')
вернёт {'e', 'u', 'a', 'i', 'o'}
информацию из множеств можно выводить в упорядоченном виде с помощью функции sorted

Методы множеств:
union - метод обьeдинения двух множеств
difference — сообщает, какие объекты присутствуют в одном, но отсутствуют в другом множестве
intersection - сообщает об общих найденных объектах
Пример:
vowels = set('aeiou')
word = 'hello'
u = vowels.union(set(word))  вернёт {'h', 'o', 'i', 'l', 'u', 'a', 'e'}
u_list = sorted(list(u)) вернёт отсортированный список
d = vowels.difference(set(word)) вернёт {'u', 'i', 'a'}
i = vowels.intersection(set(word)) вернёт {'e', 'o'}

------------------------------------------------------------
Кортежи Tuple
список, который нельзя изменить после создания (и добавить данные)
Кортежи заключены в круглые скобки
vowels = ( 'a', 'e', 'i', 'o', 'u' )

Будьте внимательны с кортежами из одного объекта
t = ('Python')
type(t)
<class 'str'>
чтобы кортеж был кортежем, необходимо включить в его определение хотя бы одну запятую, даже если кортеж содержит один объект
t2 = ('Python',)

-----------------------------------------------------------
Словарь словарей
people = {}
>>> people['Ford'] = { 'Name': 'Ford prefect',
... 'Gender': 'Male',
... 'Occupation': 'Researcher',
... 'Home Planet': 'Benelgeuse Seven'} и добавить ещё
модуль pprint, принимает любую структуру данных и выводит ее в удобном для чтения формате
import pprint
pprint.pprint(people)

Доступ:
people['Arthur']['Occupation']