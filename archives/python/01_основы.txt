1 Основы
code/python/py_learn/

python3 -V
sudo apt-get update
sudo apt-get install idle3
>idle
# comment
--------------------------------------------------------
Оболочка python3:
Ctrl+p вызвать последнюю команду

help(random.radint) получить справку по методу
dir(random) все атрибуты
-----------------------------------------------------------
кодировка отличная от UTF-8, добавить в начало 
# -*- coding: cp866 -*-
# -*- coding: cp1251 -*-
----------------------------------------------------------
Встоенные модули: https://docs.python.org/3/py-modindex.html
репозиторий сообщества http://pypi.python.org

import sys 
sys.platform
sys.version

import os
os.getcwd()
os.environ
os.getenv('HOME')

import datetime
datetime.date.today()
datetime.date.today().day   (month, year)
datetime.date.isoformat(datetime.date.today())

import time
time.strftime(“%I:%M”)
time.strftime("%A %p")

import html
html.escape("This HTML fragment contains a <script>script</script> tag.")
html.unescape("I &hearts; Python's &lt;standard library&gt;.")

import random
random.randint

------------------------------------------------------------------
строки print input
print("Start string", varyavle, somethings, "end.")
format() method
age=20
name='Swaroop'
print('{0} was {1} years old when he wrote this book'.format(name, age))
print('{0:.3f}'.format(1.0/3)) -> '0.333'
print('{0:_^11'.format('hello')) -> '____hello____'
------------------------------------------------------------------
список []
Оператор in проверяет, находится ли что-то одно внутри другого -> boolean
(:) используется для введения блока кода, ассоциированного с любой управляющей
инструкцией Python (такой как if, else, forи подобными)
if ...: 
elif ...: 
else:
в Python отступы используются для отделения блоков кода

Перебор последовательности объектов for:
for i in [1,2,3]:
for ch in "Hi!":  строки в Python являются последовательностями
for num in range(5):

когда import time доступ можно получить time.sleep(5)

list(range(5)) преобразует диапазон в список
--------------------------------------------
В Python все является объектом. объекты могут иметь состояние (атрибуты или переменные) и поведение (методы) 

------------------------------------------------
type(vowels) узнать тип
str(i)  приведение к типу строка
int(string)

------------------------------------------------
list(range(5)) создаст список [0,1,2,3,4]
range(5, 10)
range(3, 10, 2) с шагом