intro.txt
file.r расширение
$ Rscript hello.R
# comment one line
"comment many line"
--------------
$ R
> install.packages("plotrix")
>print("Hello World")
>helloString <- "Hello world" сщздать переменную
>print(helloString)
>q()
=======================
R Data Types
Vectors
Вектор - это просто одномерный массив.
student <- c('james','mark',"jane")
print(class(student)) класс элементов
vector1 <- c(1,2,5.3,6,-2,4)
print(vector1[c(2,4)])# доступ к элементам
v <- 1:8; v создать из диапазона и показать
seq(1, 3, by=0.2) создать из диапазона с шагом
seq(1, 5, length.out=4)  уместить в 4 шага
x[3] <- 0; x заменить элемент 2
x[x<4] <- 2; x заменить элементы по 4 не 2
x <- NULL     удалить вектор
--------------------------
Matrices
Матрица - это набор данных, представленный в двухмерной прямоугольной форме.
my_matrix <- matrix(vector, nrow=r, ncol=c, byrow=FALSE,dimnames=list(char_vector_rownames, char_vector_colnames))
byrow = TRUE вначале заполнить ряды(вдоль), FALSE вначале колонки(поперёк)
M = matrix( c('x','x','y','z','y','x'), nrow = 2, ncol = 3, byrow = TRUE)  вдоль 
matrix(1:12, nrow = 4, ncol = 3) по умолчанию поперёк
x <- matrix(1:12, nrow = 4, dimnames = list(c("W","X","Y" ,"Z"),c("A","B","C"))) именовать ряды и колонки
colnames(x) вывод имён колонок
rownames(x) вывод имён рядов
cbind(c(1, 6, 9),c(3, 5, 8)) матрица в две колонки
rbind(c(1, 6, 9),c(3, 5, 8)) матрица в два ряда
пример создания и доступа
x <- c(1, 3, 6, 4, 5, 0)
dim(x) <- c(2,3)  - ряда , колонок
x[c(1, 2),c(2, 3)] - доступ с 1 и 2 рядам, 2 и 3 колонке
x[-1,,drop=FALSE] нижий ряд
x[2,2] <- 10; x  изменить значение
x[x<5] <- 0; x  заменить все которые меньше пяти
cbind(x, c(1, 3, 6)) добавить колонку
rbind(x,c(1,2,3)) добавить ряд
--------------------------
Lists
Список - это R-объект, который можно использовать для хранения в нем ряда различных элементов.
mylist <- list(c(1,2,3),22.4,sin)
typeof(mylist) тип
length(mylist) длина
x[[6]] <- 8; x  внести изменения в 6-й элемент списка

--------------------------
Arrays
Матрица R должна быть двухмерной, но массив может иметь любые размеры. Атрибут массива принимает атрибут «dim», который указывает количество измерений, которые вы хотите создать для массива.
x <- array(c('boy', 'girl'),dim = c(3,3,2)) поперёк две матрицы, одна над другой
--------------------------
Data Frames
Фреймы данных - это просто табличные объекты данных. Вы можете иметь данные разных типов в разных столбцах фрейма данных, что недопустимо в матрице. Первый столбец кадра данных может быть числовым, второй может содержать логические значения, третий столбец может содержать символы и т.д. Это просто список векторов одинаковой длины. Фрейм данных - это двухмерный объект.
x <- data.frame("SN" = 1:2, "Age" = c(22, 14), "Name" = c("Alice", "John"))
str(x)  показать полностью
х краткий вывод
По умолчанию функция data.frame () преобразует символьный фактор в вектор. Такое поведение можно подавить
x <- data.frame("SN" = 1:2, "Age" = c(22, 14), "Name" = c("Alice", "John"), stringsAsFactors = FALSE)
x["Name"] доступ к элементам
x$Name или x[["Name"]] выведет в ряд
str(trees) встроеный сет для примеров
head(trees, n=5) вывести пять с головы
trees[1:3,] c первого по третий
trees[trees$Height > 82,] с условием
x[1,"Age"] <- 23; x  изменить значение
rbind(x,list(1, 20,"Paul")) добавить ряд
cbind(x, Course=c("Eng.","IT")) добавить столбец
x$Course <- c("Eng.","IT"); x как список
x$Course <- NULL удалить
--------------------------
Factors
Факторы - это объекты данных, используемые для категоризации данных и последующего хранения их по уровням. Их можно использовать для хранения как строк, так и целых чисел.
Чтобы создать факторы в R, воспользуйтесь методом factor () и используйте вектор в качестве входных данных.
x <- factor(c("Married", "married", "single", "single"));
d <-
c("East","West","East","North","North","East","West","West","West","East","North")
is.factor(d) проверить
factor_data <- factor(d)  сщздание фактора
new_order_data <- factor(factor_data,levels = c("East","West","North")) добавление порядка
генерировать уровни факторов с помощью функции «gl ()»
gl(n, k, labels)
n - это целое число, определяющее количество уровней.
k - это целое число, определяющее количество повторений.
labels - это вектор меток, представляющих результирующие уровни факторов
vec <- gl(2, 3, labels = c("Texas", "Seattle","Boston"))
x[2] доступ ко второму элеиенту
x[c(1, 3)]  доступ к первому и второму элементу
x[3] <- "married" добавить
------------------------------
Strings
y <- "single quote ' added in between the double quotes"
конкатенация
paste(..., sep = " ", collapse = NULL)
paste(x,y,z)
nchar("Counting number of characters") кол-во символов
toupper(x) верх регистп
tolower(x) ниж регистр
substring(x, first, last)  часть строки
result <- substring("Nicholas", 4, 6)
==============================