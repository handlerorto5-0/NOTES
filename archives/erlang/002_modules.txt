Модуль:Функция(Параметры). кроме erlang модуля
lists:seq(1,4).
Форма записи атрибута -Имя(Атрибут)
-module(Имя модуля) обязательный атрибут, имя модуля и имя файла должны совпадать
-export([Функция1/ Арность1, Функция2/Арность2, ... ФункцияN/АрностьN]).
-compile(export_all). експорт в режиме разрабртки
Имя(Аргументы) -> ТелоФункции.
%%% коментарий к модулю
%% коментарии остальные
% комментарий короткий

компилирование
erlc флаги file.erl   в терминале
в интерпритаторе
compile:file(ИмяФайла)
c().      например c(useless).

Параметры компиляции:
debug_info подключить отладку
{ outdir, Директория} указать дирректорию
export_all экспортировать все функции из модуля
{d, Макро} или {d, Макро, Значение} , применяется при модульном тестировании, значение true по умолчанию
compile:file(useless, [debug_info, export_all]).
или добавитьв модуль
-compile([debug_info, export_all]).

Макросы - простые выражения, атрибут модуля, заменяются перед компиляцией
-define(MACRO, some_value).
теперь можно использовать ?MACRO внутри любой функции
-define(HOUR, 3600). % в секундах

микрофункции
-define(sub(X,Y), X-Y). если вызвать ?sub(23,47), компилятор заменит на 23-47

предопределённые макросы:
?MODULE даст атом имени модуля
?FILE имя файла в строковом виде
?LINE номер текущей строки

проверить , определены ли макросы
-ifdef(DEBUGMODE).
-define(DEBUG(S), oi:format("dbg:"++S)).
-else.
-define(DEBUG(S), ok).
-endif.

запрос метаданных
useless:module_info().
useless:module_info(attributes).
-vsn(номер версии) - атрибут генер автоматически, можно щадать вручную

Модуль А не должен вызывать модуль Б, если тот же модуль вызывает модуль А.



