Веб-компоненты в действии
исходник https://github.com/bengfarrell/webcom-ponentsinaction

=======================================
Глава 1 Фреймворк без фреймворка стр 28

Что такое веб-компонент

Это совместно используемые и автономные фрагменты кода (HTML/JS/CSS), которые предлагают визуальный стиль и интерактивность и, возможно, имеют API или параметры, которые можно настраивать.
Например календарь:
<input type="date">
свойства можно запросить
console.log( document.querySelector('input').value );
-----------------------------------------
Теневая модель DOM

Защищает компонент от непреднамеренных последствий,
когда CSS или JS может повлиять на стили и узлы внутри, не подлежащие изменению. Вместо этого у компонента пользовательский API, с которым можно взаимодействовать, применяя методы и свойства
Увидеть в Chrome можно активировав пункт «Показывать теневую модель
DOM агента пользователя» в настройках инструментов разработчика.
#shadow-root вуаля
----------------------------------------
Пользовательские элементы

Импорт HTML был фрагментом HTML-кода для объявления разметки или структуры компонента, а также включал в себя код JS, определяющий логику компонента.
----------------------------------------
Библиотеки Polymer и X-Tag

Polymer от компании Google (https://polymer-library.polymer-project.org)
X-Tag от Mozilla (https://x-tag.github.io)
----------------------------------------
Функции ES6/ES2015

Вскоре мы все можем создавать компоненты без какого-либо фреймворка или с помощью фреймворка на свой выбор. Мы будем использовать веб-компонент, созданный React в Angular, или веб-компонент, созданный Vue, на веб-странице без фреймворка.
С появлением WebAssembly мы могли видеть, что в таких языках, как C ++, Lua, Go и т. д., код, скомпилированный в байт-код и обернутый веб-компонентом, выглядит как совершенно нормальный элемент извне, одновременно позволяя получать высокопроизводительную графику, которая может работать быстрее, чем обычно в JS.

=========================================
Веб-компоненты как и любой другой элемент DOM

DOM-элементы имеют различные свойства, методы, события и атрибуты, которые используются, чтобы сообщать элементу, как действовать и взаимодействовать с внешним миром


