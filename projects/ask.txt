ask.txt

1.      Вам предстоит разобраться в ПО большой системы и при этом исходный код – это все, чем Вы можете воспользоваться. Нет никого из предыдущих разработчиков данного ПО, нет технических спецификаций. Нужно срочно начать его поддержку (устранение ошибок) и в дальнейшем перейти к его развитию.

a.       Каким образом Вы разберетесь в коде?

Понять и формально описать место и роль данного ПО в конретной бизнес модели. Описать общие задачи стоящие перед разработчиками. Это часть будет преамбулой к вновь создаваемой документации.
Составить обобщенный архитектурный план: кто?, что?, как?, входные данные?, исходные данные? цели? (состояние цели для легаси). Эта часть будет общим описанмем архитектуры во вновь создаваемой документации и подлежит дальнейшей детализации.
Построить схему базы данных.
Построить схему ендпоинтов.
Построить схему применяемых плагинов и библиотек.
Внедрить  плагин для генерации документации (RDoc gem). Последовательно добавлять недостоющие коментарии и генерировать документацию.
Последовательно добавить discription к недостающим тестам.
Построить схему тестирования. (метод - движение по кругу BDD)

b.      Что Вам для этого нужно?
Канцелярские принадлежности.
Консультация по общим принципам бизнес модели.
Оборудованое большим монитором рабочее место, средней мощности ПК с доступом в интернет(мощность зависить от работы с фронтендом).
По необходимости доступ к платным сервисам, профлитературе, подписке.
Желатеоьно отсутствие дрескода, возможность работать в наушниках или тишина, место для курения,релаксации.

c.       Какие результаты Вы предоставите в качестве доказательства того, что Вы разобрались в коде?
код должен работать на локальной машине в dev режиме
документация должна появиться и прогрессировать до уровня позможности постановки новых задач на её основе

d.      Почему Вам интересно будет заниматься данной задачей?
я не знаю, это нейробиологов надо спрашивать

2.      Вам не понятен какой-либо момент в требованиях. Срок реализации требований фиксированный и Вы под него подписались ранее.

Ситуация неопределённости типична для разработчиков, иначе они были бы не нужны, остаётся только надеятся на подготовку и понимание менеджмента по вопросам организации рабочего процесса.
Важно установить и закрепить межличностные связи. Документирование спорных и неясных требований  может стать сильным подспорьем в таких ситуациях.

a.       Что Вы будете делать в данной ситуации - прояснять требования или делать на свое усмотрение?
Такие ситуации часто возникают, когда есть вероятность получить ясность в процессе. Проблему должны осознавать все стороны. Я получу подтверждение о невозможности прояснить требования, стребую задачу на выработку своих предложений, какие бы ни были, хоть самые сырые, надо сперва согласовывать требования 

b.      Почему Вы так поступите?

иначе можно получить не только производственный конфликт , но межличностный, что гораздо опаснее.

3.      Какие недостатки языка Ruby Вам видятся?

Есть один недостаток у калаша, громко переводится режим :)
У Ruby есть большие проблеммы в "экосистеме" сообщества,  они пришли с тех времён когда нахлынули разработчики "за длинным рублём", они брали не вкладывая ( не отвечая на вопросы нв форумах например). Остальные проблемы вытекают из этой. Мало кто,  умеет работать из ruby с R, к примеру, python обгоняет поэтому по многим направлениям. Торопыги все засыпали "сахаром", haml, slim, coffee и пр. тупиковые технологии по сути отняли сотни часов на изучение, сделали легаси ещё запутаннее.
Ruby изначально задумывался, как язык стартапов, и требует соответсвующих черт зарактера от людей, ему нужны иследователи и новаторы. Все проблемы от случайных пассажиров.


С Уважением!
Каландаришвили Вячеслав  02.10.2020