Построение трапеции RTC в браузере:
Местная перспектива

Сигнализация не стандартизирована в WebRTC, поскольку взаимодействие между браузерами обеспечивается веб-сервером с использованием загруженного кода JavaScript. XMLHttpRequest (XHR), WebSocket и такие решения, как Google Channel API, представляют собой хорошие кандидаты для этого.

Канал сигнализации необходим для обмена тремя типами информации между одноранговыми узлами WebRTC:
- Управление медиа-сессией. Настройка и разрыв связи, а также сообщение о возможных состояниях ошибки
- Конфигурация сети узлов. Сетевые адреса и порты, доступные для обмена данными в реальном времени, даже при наличии NAT
- Мультимедийные возможности узлов. Поддерживаемые носители, доступные кодеры / декодеры (кодеки), поддерживаемые разрешения и частота кадров и т.д.

Для экспериментов можно обойти этап настройки канала сигнализации и позволить трем этапам, упомянутым выше, выполняться на одной машине.

Вызов нового RTCPeerConnection (конфигурация) создает объект RTCPeerConnection, который является абстракцией для канала связи между двумя пользователями / браузерами и может быть либо вводом, либо выводом для конкретного носителя.
Stream, параметр конфигурации содержит информацию для поиска доступа к серверам STUN и TURN, необходимую для фазы настройки обхода NAT.

Код:
/code/webrtc/ch3_1/

повернуть изображение
<button onclick="turn()">Turn Video</button>
в js
function turn(){
  const v = document.getElementById("localVideo")
  v.style.transform = "rotate(180deg)"
}
ДОкументация:
https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getVideoTracks
https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getAudioTracks
https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection








