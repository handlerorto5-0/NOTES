========================================
Глава 2 Пишем функции стр 15

ReasonML требует, чтобы вы определяли свои функции перед их использованием.

let avg = (a, b) => {
	(a +. b) /. 2.0;
};
let result = avg(3.0, 4.5);
Js.log(result);

для компиляции функций:
вначале , создаст lib:
$ bsb -make-world
потом можно:
yarn build
--------------------------------------------
количество знаков после запятой, для переменной amount:
Js.Float.toFixedWithPrecision(amount, ~digits=2)
--------------------------------------------
Использование помеченных параметров(Labeled Parameters)

Позволяют передавать аргументы в любом порядке, с таким синтаксисом:
в функции определяем, "p" можно применят внутри функции:
let payment = (~principal as p, ~apr, ~years) => {..};
let amount = payment(~apr=7.5, ~years=15, ~principal=25000.0);
--------------------------------------------
Предоставление значений по умолчанию для помеченных параметров

Определяем:
let payment = (~principal, ~apr, ~years=30, ()) => { ...};
Применяем значение по умолчанию:
let amount = payment(~principal=10000.0, ~apr=5.0, ());
Или присваиваем другое значение:
let amount2 = payment(~apr=7.5, ~years=15, ~principal=25000.0, ());
----------------------------------------
Сокращение кода с помощью refmt

Не нужны скобки, когда всего один параметр:
let sqr = x => x * x;

С библиотекой bsrefmt, можно автоматически переформатировать код:
$ bsrefmt src/Functions.re > src/ReformattedFunctions.re

Последние две строки эквивалентны:
let apr = 7.5;
let principal = 10000.0;
let month1 = payment(~principal=principal, ~apr=apr, ~years=15, ());
let month2 = payment(~principal, ~apr, ~years=15, ());

Можно сделать длиное выражение короче:
let toFixed = Js.Float.toFixedWithPrecision;
let example = toFixed(3.1415926, ~digits=4);
------------------------------------------
Указание типов параметров

Чтобы аннотировать функцию, поставьте после каждого параметра двоеточие: и тип данных для этого параметра. После закрывающей скобки параметров поставьте еще одно двоеточие и тип возвращаемого значения функции.
let avg = (a: float, b: float) : float => {...};
let payment = (~principal: float, ~apr: float, ~years: int=30, ():unit) : float=> {...};
или короче:
let avg: (float, float) => float = (a, b) => {...};
let payment: (~principal: float, ~apr: float, ~years: int=?, unit) => float = (~principal, ~apr, ~years = 30, ()) => { ... };
===========================================
Написание функций без параметров или возвращаемых значений стр 25







