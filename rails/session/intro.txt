intro.txt

Что такое сессия?

Сессиями легко пользоваться:
session[:current_user_id] = @user.id

Дожим данныые в одном месте:
№app/controllers/sessions_controller.rb
def create
  # ...
  session[:current_user_id] = @user.id
  # ...
end
И читаем в другом:
№app/controllers/users_controller.rb
def index
  current_user = User.find_by_id(session[:current_user_id])
  # ...
end
-----------------
В чём отличие от куков?
В файле cookie можно хранить не более 4 КБ данных.
Файлы cookie отправляются вместе с каждым вашим запросом.
Если вы случайно раскроете свою secret_key_base, ваши пользователи смогут изменить данные, которые вы поместили в файл cookie.
Хранение неправильного типа данных в файле cookie может быть небезопасным.


Rails поработал с cookie, чтобы сделать его более безопасным.В Rails есть еще несколько мест для хранения ваших сеансов.Все хранилища сеансов, которые не являются хранилищами файлов cookie, работают примерно одинаково.

Когда вы вызываете session [: current_user_id] = 1 в своем приложении, а сеанс еще не существует:
- Rails создаст новую запись в вашей таблице сеансов со случайным идентификатором сеанса (скажем, 09497d46978bf6f32265fefb5cc52264).
- Он будет хранить {current_user_id: 1} (в кодировке Base64) в атрибуте данных этой записи.
- И он вернет сгенерированный идентификатор сеанса, 09497d46978bf6f32265fefb5cc52264, в браузер с помощью Set-Cookie.
В следующий раз, когда вы запросите страницу, браузер отправляет тот же файл cookie в ваше приложение, используя заголовок Cookie :
- (например: Cookie: _my_app_session = 09497d46978bf6f32265fefb5cc52264;
путь = /; HttpOnly)
Когда вы вызываете сеанс [: current_user_id]:
- Ваше приложение извлекает идентификатор сеанса из файла cookie и находит его запись в таблице сеансов.
- Затем он возвращает current_user_id из атрибута данных этой записи.

Независимо от того, храните ли вы сеансы в базе данных, в Memcached, Redis или где-либо еще, они в основном следуют одному и тому же процессу. Ваш cookie содержит только идентификатор сеанса, и ваше приложение Rails ищет данные в вашем хранилище сеансов, используя этот идентификатор.
-------------------
Обычно хранят, в cookie, хранилище кешей или хранилище базы данных.

Хранение ваших сессий в файлах cookie - безусловно, самый простой способ. Не требует дополнительной инфраструктуры или настройки.

Хранение сессий в кеше. Что-то вроде Memcache для кеширования  частичных файлов или данных, второе по простоте место для хранения данных сеанса.

Хранение сессий в базе данных, например в Redic, ActiveRecord или что-то еще. Можно сохранить данные сеанса до тех пор, пока он не истечет законным образом.