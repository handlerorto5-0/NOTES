Примитивный взгляд на виды взаимодействия в сети(с habr):
синхронное- передающая система ожидает ответа
асинхронное- передающая система сама периодически опрашивает состояние документа;
реактивное - принимающая система вызывает callback или отправляет сообщение о результате обработки заданному в исходном запросе адресату.
-------------------------------
Глава 1
Система потоковой обработки данных- система не жёсткого реального времени, которая делает данные доступными, когда клиентское приложение хояет их видеть.

Архитектурная диаграмма:
- Звено збора данных
- Звено очереди сообщений
- Звено анализа
- Звено долгосрочного хранения
- Звено хранилища данных в памяти
- Доступ к данныи
--------------------------------
Глава 2  Получение данных от клиента 

1.Общие сведения:
Это точка входа в потоковую систему
2.Патерны сбора данных:
*Запрос-ответ. Клиент спросил и ждёт, служба ответила как смогла. Клиент и/или сервер моеут отправлять запросы асинхроно(полуасинхронность, полная ассинхронность).
*Издатель-подписчик. Сообщение от издателя попадает в тему, и затем рассылается(проталкивается или вытягивается) подписчикам.
*Одностороннее взаимодействие. Выстрелил и забыл. клиент передаёт собщение, от ситемы не требуется подтверждения.
*Запрос-подтверждение.Когда служба только подтверждает получение запроса от клиента.
*Поток. Служба посылает запросы, а клиент передаёт непрерывный поток данных. http://stream.meetup.com/2/rsvps
3.Перевод звена сбора данных на новый уровень:
*Маштабирование патерна запрос-ответ.Удобно горизонтално моштабировать, нет хранения состояния, взаимодействуют любые клиенты и службы. Включёны слои балансировки нагрузки и очереди собщений.
*Маштабирование патерна поток. Маштабировать потребляющий поток узел и/или добавить слой буферизации.Данные приходат в буфер сырыми.
4.Защита от потери данных:
*Реализация отказоустойчивости 
- контрольная точка(глобалный снимок и возможность пережить потрю донных)
- протоколирование в сыром виде и в каждом отдельном узле, на стороне получателя  и/или отправителя перед отправкой.
---------------------------------------------
Глава 3  Транспортировка данных из звена сбора данных: расчленение конвеера данных (стр 57)

1.Зачем нужно звено очереди сообщений
Система размещается на нескольких машинах. Разрыв связей между получателем и отправителем даёт более высокий уровень пбстракции.
Очередь сообщений - включает производителя, брокера, аотребителя, 
2.Что такое долговечность сообщений
Долговременные сообщения обеспечивают отказоустойсивость.
3.Поддержка периодически отключающихся потребителей
4.Семантика доставки сообщений
гарантии обмена сообщениями:
- не более одного раза, сообщение может потерятся, ни в коем случае потребитель не может прочесть его дважды.
- не менее одного раза, сообщение не может потерятся, но может быть прочитано много раз.
- ровно один раз, сообщение не может потерятся, и может быть прочитано толко один раз.
5.Выбор подходящей технологии
===================================
Глава 4. Анализ потоковых данных.

1. анализ данных в движении
Под данными в движении понимаются все кортежи в системе, от источника до клиента на выходе, они не записываются в постояное хранилище.
---------------------------------
2. типичная архитектура потоковой обработки
Пример технологий для обработки потоков: Spark Streaming, Storm, Flink, Samza. Они обладают рядом сходных черт:
- Потоковый диспечер. Компонент, которому отправляется потоковое приложение
- Потоковый процессор. Отдельные узлы выполняют потоковые алгоритмы
- Входом для потоковых алгоритмов являются источники данных

--------------------------------
3. основные функции каркасов потоковой обработки
Выбор семантики: не более одного раза, не менее одного раза, ровно один раз.
Управление состоянием. Хранить резюльтаты онализа, в заисимоти от сложности и фнгкционалтности. просто в памяти и до реплицируемого постояного хранилища с возможностью опроса.
Отказоустойчивость. Вопрос КОГДА сломается. Решения , это формы репликации и координации.Конечный автомат реплицирует задачу на нескольких независимых узлах. Востановление откатом, состояние вычисления постояно упаковывается в конечную точку.
===================================
Глава 5. Алгоритмы анализа данных стр 98
1. опрос потока
2. к вопросу о времени
3. методы обобщения
















