01.Getting Ready.txt

Создание приложения
Процесс регистрации обычно включает создание учетной записи на веб-сайте службы, затем ввод основной информации о приложении, такой как имя, веб-сайт, логотип и т. Д. После регистрации приложения вам будет предоставлен client_id (и в некоторых случаях client_secret). ), который вы будете использовать, когда ваше приложение взаимодействует со службой.

Одна из самых важных вещей при создании приложения - зарегистрировать один или несколько URL-адресов перенаправления, которые приложение будет использовать. По URL-адресам перенаправления служба OAuth 2.0 вернет пользователя после авторизации приложения. Очень важно, чтобы они были зарегистрированы, в противном случае можно легко создать вредоносные приложения, которые могут украсть пользовательские данные. Более подробно об этом рассказывается далее в этой книге.

URL-адреса перенаправления и состояние
API-интерфейсы OAuth 2.0 будут перенаправлять пользователей только на зарегистрированный URL-адрес, чтобы предотвратить атаки с перенаправлением, когда код авторизации или токен доступа могут быть перехвачены злоумышленником. Некоторые службы могут позволить вам зарегистрировать несколько URL-адресов перенаправления, что может помочь при использовании одного и того же идентификатора клиента для веб-приложения и мобильного приложения или при использовании одного идентификатора клиента для служб разработки и производства.

В целях безопасности URL-адрес перенаправления должен быть конечной точкой https, чтобы предотвратить перехват кода во время процесса авторизации. Если ваш URL-адрес перенаправления не https, злоумышленник может перехватить код авторизации и использовать его для взлома сеанса.

Большинство служб рассматривают проверку URL перенаправления как точное совпадение. Это означает, что URL-адрес перенаправления https://example.com/auth не будет соответствовать https://example.com/auth?destination=account. Рекомендуется избегать использования параметров строки запроса в URL-адресе перенаправления и включать в него только путь.

Некоторые приложения могут иметь несколько мест, из которых они хотят начать процесс OAuth, например ссылку для входа на домашней странице, а также ссылку для входа при просмотре какого-либо общедоступного элемента. Для этих приложений может возникнуть соблазн попробовать зарегистрировать несколько URL-адресов перенаправления, или вы можете подумать, что вам нужно иметь возможность изменять URL-адрес перенаправления для каждого запроса. Вместо этого OAuth 2.0 предоставляет для этого механизм - параметр «состояние».

Параметр «state» можно использовать для кодирования состояния приложения, но он также должен включать некоторое количество случайных данных, если вы также не включаете параметры PKCE в запрос. Параметр состояния - это строка, непрозрачная для службы OAuth 2.0, поэтому любое значение состояния, которое вы передаете во время запроса первоначальной авторизации, будет возвращено после того, как пользователь авторизует приложение. Вы можете, например, закодировать URL-адрес перенаправления в чем-то вроде JWT и проанализировать его после того, как пользователь будет перенаправлен обратно в ваше приложение, чтобы вы могли вернуть пользователя в соответствующее место после входа в систему.