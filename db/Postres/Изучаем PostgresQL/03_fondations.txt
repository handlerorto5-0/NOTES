Глава 3 Основные строительные блоки PostgreSQL (стр72)

Кодирование базы данных

В организации должен быть принят стандарт именования.
Для таблиц можно выбрать суффикс tbl, а для представлений  суффикс vw.
При  именовании объектов предпочтително применять описательные имена, по возможности избегая акронимов и аббревиатур, в единственном числе. Для разделения слов обычно употреб­ляется нижнее подчеркивание.
Длина имени объекта в PostgreSQL не должна превышать 63 символов

Документация:
Онлайновый инструмент draw.io для создания диаграмм – UML и сущность-связь.
В PostgreSQL однострочные комментарии начинаются двумя дефисами (--), а многострочные заключаются между /* и */.

Управление версиями:
Для каждой базы данных в кластере PostgreSQL заведите DDL-скрипт для объектов, являющихся частью схемы, и DML-скрипт, который заполняет таблицы статическими данными.
Существует возможность интегрировать средство миграции базы данных, на-
пример Flywaydb (https://flywaydb.org), с Git. Это позволяет настроить непрерывную интеграцию, а кроме того, администратор будет видеть, что происходит с базой данных.

-------------------------------------------
Иерархия объектов в PostgreSQL

Базы данных, роли, табличные пространства, настройки и процедурные языки находятся на одном уровне иерархии:
- Шаблонные базы данных.template1: база данных, клонируемая по умолчанию.template0: дополнительная база данных.
- Пользовательские базы данных.
* dblink расширение для обмена данными между базами
* \l - список всех БД в psql. В стобце пивелегии(Access privileges) по схеме <user>=<privileges>/granted by, например postgres=CTc/postgres,где , -С создание, -с подключение, -Т создание временных таблиц.
* набор кодировок текста http://www.postgresql.org/docs/current/static/multibyte.html
* прочие атрибуты: datfrozenxid позволяет узнать, пора ли уже очи-
щать БД; dattablespace определяет табличное пространство базы данных; datconnlimit задает число допустимых подключений (‐1 означает, что ограничения нет); datallowconn запрещает подключение к базе данных.
* \c открывает новое соединение с базой данных и закрывает текущее.
- Роли принадлежат кластеру баз данных. 
* Атрибуты: Superuser,Login,Createdb,Createrole,Replication,Password, Connection limit, Inherit, Bypassrls.
- Табличное пространство – это область для хранения базы данных или ее объектов. CREATE TABLESPACE
- Шаблонные процедурные языки предназначены для удобства регистрации языков программирования. CREATE LANGUAGE
- Параметры PostgreSQL управляют различными аспектами работы сервера, в т. ч. репликацией, журналами предзаписи, потреблением ресурсов, планированием запросов, протоколированием, аутентификацией, сбором статистики, сборкой мусора, клиентскими подключениями, блокировками, обработкой ошибок и отладкой.
* postgres=# SELECT count(*) FROM pg_settings; сколько параметров
* Для изменения и просмотра значения параметра SET и SHOW. Задание значения в файле postgresql.conf имеет глобальный эффект.

-------------------------------------------
Компоненты базы данных PostgreSQL

Базу данных PostgreSQL можно рассматривать как контейнер схем. Схема содержит все именованные объекты базы данных: таблицы, представления, функции, агрегаты, индексы, последовательности, триггеры, типы данных, домены и диапазоны.
* отозвать у всех пользователей разрешение создавать объекты в схеме public: REVOKE CREATE ON SCHEMA public FROM PUBLIC;
* Чтобы создать схему car_portal_app, принадлежащую роли car_portal_app,
нужно выполнить команду: CREATE SCHEMA car_portal_app AUTHORIZATION car_portal_app;

Существует несколько типов таблиц:
постоянная – возникает в момент создания и пропадает после удаления;
временная – существует в течение сеанса.
нежурналируемая – операции с нежурналируемыми таблицами выполняются гораздо быстрее
дочерняя – такая таблица наследует одну или несколько таблиц

* postgres=# SHOW timezone;
pg_timezone_names и pg_timezone_abbrevs дают полный список полных и сокращенных названий часовых поясов соответственно postgres=# SET timezone TO 'Asia/jerusalem';
ostgres=# SELECT now();

-------------------------------------------
База данных для сайта торговли автомобилями

sudo -u postgres psql

CREATE ROLE car_portal_app LOGIN;
CREATE DATABASE car_portal ENCODING 'UTF-8' LC_COLLATE 'en_US.UTF-8'
LC_CTYPE 'en_US.UTF-8' TEMPLATE template0 OWNER car_portal_app;

CREATE SCHEMA car_portal_app AUTHORIZATION car_portal_app;

postgres=# \c car_portal

postgres=# \set VERBOSITY 'verbose'
postgres=# CREATE TABLE "user" AS SELECT 1;

CREATE TABLE account (
account_id SERIAL PRIMARY KEY,
first_name TEXT NOT NULL,
last_name TEXT NOT NULL,
email TEXT NOT NULL UNIQUE,
password TEXT NOT NULL,
CHECK (email ~* '^\w+@\w+[.]\w+$'),
CHECK (char_length(password)>=8)
);

CREATE TABLE seller_account (
seller_account_id SERIAL PRIMARY KEY,
account_id INT UNIQUE NOT NULL REFERENCES
account(account_id),
number_of_advertizement INT DEFAULT 0,
user_ranking float,
total_rank float
);


