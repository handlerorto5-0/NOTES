Глава 1. Реляционные базы данных
Tеорема CAP, известная также как теорема Брюера, утверждает, что распределенная вычислительная система не может одновременно обеспечить все три следующих свойства:
- согласованность
- доступность
- устойчивость к разделению

В PostgreSQL договечность данных обеспечивается журналом предзаписи (write-ahead log – WAL).

Понятия реляционной модели. База данных в ней представлена в виде набора отношений . Состояние базы данных в целом определяется состоянием всех имеющихся в ней отношений. Из отношений можно извлекать различную информацию, применяя операции соединения, агрегирования и фильтрации.

- Отношение состоит из множества кортежей. 
- Кортеж – это упорядоченный набор атрибутов.
- Значений истинности три: истина (true), ложь (false) и неизвестно (unknown), или NULL.
- Домен определяет множество допустимых значений атрибута. Один из способов задать домен – указать тип данных и ограничения на этот тип.

Первичный ключ, генерируемый СУБД, называют суррогатным, или синтетическим. В противном случае ключ называется натуральным. В роли суррогатных ключей-кандидатов могут выступать порядковые номера или универсальные уникальные идентификаторы (UUID).
Отношение может также ссылаться само на себя. Тогда внешний ключ называется автореферентным, или рекурсивным.
---------------------------
sudo -u postgres psql
psql -d database -U  user -W
psql -h host -d database -U user -W
psql -U user -h host "dbname=db sslmode=require"

---------------------------
Commands inside psql

Task	               Psql command
Close conection	\q
Connect to a database	\c basename
List databases	\l
Show table definition including triggers	\d  tablename
Listar Schemas	\dn
List functions	\df
List views	\dv
Show function SQL code	\df+  function
Pretty-format	\x
List available tables \dt
Describe a table \d table_name
List available views \dv
List users and their roles \du
Execute the previous command \g
Command history \s
If you want to save the command history to a file \s filename
Execute psql commands from a file \i filename
Get help on psql commands \?
Get help on specific PostgreSQL statement \h ALTER TABLE
Turn on query execution time \timing
Edit command in your own editor \e
When you edit a function in the editor \ef [function name]
Switch output options \a  \H  неподвисанный и html
выводит описание домена \dD+
выводит описание типа перечисления \dT
выйти из psql \q
полный перечень функций memcached \df memcache_* (расширение)

--------------------------------------------------------------------------------------
Установка:
https://www.PostgreSQL.org/download/ выложены дистрибутивы для наиболее распространенных платформ
настроить apt-репозиторий PostgreSQL:
$ sudo sh -c 'echo "deb http://apt.PostgreSQL.org/pub/repos/apt/
$ (lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
$ wget --quiet -O - https://www.PostgreSQL.org/media/keys/ACCC4CF8.asc |  sudo apt-key add -
$ sudo apt-get update
$ sudo apt-get upgrade
Установка клиентов:
sudo apt-get install PostgreSQL-client-13
какие программы были установлены:
ls /usr/lib/postgresql/13/bin/
установить pgAdmin cтр 61
Установка сервера:
$sudo apt-get install PostgreSQL-10
Для проверки корректности установки:
$ pgrep -a postgres
---------------------------------------------------
Базовая конфигурация сервера:
В процессе установки сервера создается новый пользователь операционнойсистемы и пользователь базы данных с именем postgres.
Аутентификация клиента управляется конфигурационным файлом pg_hba.conf. Чтобы найти в нем строки, относящиеся к одноранговой аутентификации:
grep -v '^#' /etc/postgresql/13/main/pg_hba.conf | grep 'peer'
Чтобы подключиться к серверу базы данных от имени пользователя postgres:
$ sudo -u postgres psql
параметры соединения:
-d: имя базы данных
-h: имя или IP-адрес узла
u: им пользователя
-p: номер порта
------------------------------------------------------------
Клиент psql

как использовать редактор nano для редактирования функции:
postgres=# \setenv PSQL_EDITOR /bin/nano
postgres=# \ef
В файле .psqlrc можно сохранить настройки.
можно создавать сокращение частых запросов:
postgres=# \set activity 'SELECT pid, query, backend_type, state FROM pg_stat_activity';
postgres=# :activity;


