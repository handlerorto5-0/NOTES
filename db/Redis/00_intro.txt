======================
Seven Databases in Sewen Weeks стр 260
======================
для ruby
https://github.com/redis/redis-rb
https://github.com/redis-store/redis-rails
======================
$ redis-server
$ redis-cli
> PING
> help
> exit
-----------------------
SET всегда требует двух параметров: ключа и значения. Для получения значения нужны только GET и имя ключа.
> SET 7wks http://www.sevenweeks.org/
> GET 7wks
установить несколько значений с помощью MSET
> MSET gog http://www.google.com yah http://www.yahoo.com
MGET захватывает несколько ключей и возвращает значения в виде упорядоченного списка
> MGET gog yah
создать счетчик и затем увеличить его с помощью команды INCR
> SET count 2
> INCR count
> GET count
-------------------------------
Транзакции
При использовании MULTI команды на самом деле не выполняются, когда мы их определяем. Вместо этого они ставятся в очередь, а затем выполняются последовательно после EXEC.
> MULTI
> SET prag http://pragprog.com
> INCR count
> EXEC
==================================
Сложные типы данных

Команды SET начинаются с S, хэши с H, а отсортированные наборы с Z. Команды списка обычно начинаются либо с L (слева), либо с R (справа), в зависимости от направления операции (например, LPUSH).
----------------------------------
Хеш
* хеши могут хранить только строковые значения
* двоеточие внутри ключей часто логически разделяет ключ на сегменты

> MSET user:luc:name "Luc" user:luc:password s3cret
> MGET user:luc:name user:luc:password

Вместо отдельных ключей мы можем создать хеш, содержащий собственные пары ключ-значение.
> HMSET user:luc name "Luc" password s3cret
> HVALS user:luc
> HKEYS user:luc
> HGET user:luc password

Примеры дополнительных команд:
- удалить хеш-поля (HDEL)
- увеличить значение целочисленного поля на некоторое количество (HINCRBY)
- получить количество полей в хеше (HLEN)
- получить все ключи и значения (HGETALL)
- установить значение, только если ключ еще не существует (HSETNX)
------------------------------------
Списки
Команды списка начинаются либо с L (слева), либо с R (справа)
- LPUSH и RPOP для очереди
- LPUSH и LPOP для стека

Списки содержат несколько упорядоченных значений, которые могут действовать как очереди (fifo), так и стеки (lifo).

> RPUSH eric:wishlist 7wks gog prag
* LRANGE - получить любую часть списка, указав первую и последнюю позиции
> LRANGE eric:wishlist 0 -1
* LREM удаляет из данного ключа некоторые совпадающие значения.
* Установка счетчика больше 0 удалит только это количество совпадений, а установка счетчика на отрицательное число удалит это количество совпадений, но просканирует список с конца (с правой стороны).
> LREM eric:wishlist 0 gog
* можно вытащить их из левого (верхнего) списка
> LPOP eric:wishlist

* Redis предоставляет одну команду для извлечения значений
от конца одного списка и толкание в начало другого - RPOPLPUSH (правый поп, левый толчок).
--------------------------------
Илокирование списков
BRPOP - команда для блокировки до тех пор, пока не появится значение для извлечения:
> BRPOP comments 300

BLPOP удалит первый элемент в списке или блоке (точно так же, как BRPOP удалил последний элемент), а BRPOPLPUSH - это блокирующая версия RPOPLPUSH
-------------------------------
Sets

Множества представляют собой неупорядоченные коллекции без повторяющихся значений и являются отличным выбором для выполнения сложных операций между двумя или более ключевыми значениями, такими как объединения или пересечения.

* можно добавить несколько значений
> SADD news nytimes.com pragprog.com
> SADD tech pragprog.com apple.com
* получить полный набор в произвольном порядке
> SMEMBERS news
* найти пересечение множеств, есть в обоих
> SINTER news tech
* найти все новостные сайты, не относящиеся к техническим
> SDIFF news tech
* обьединить, дубликады будут удалены
> SUNION news tech
* обьединить и сохранить в новом множестве
> SUNIONSTORE websites news tech

- для хранения пересечений (SINTERSTORE) и различий (SDIFFSTORE)
- SMOVE перемещает значения из одного набора в другой
- SCARD находит длину наборов
- SPOP - извлечение случайного значения из набора
- SREM key value [value ...] удаление значений
----------------------------------------
Sorted Sets
Упорядоченные множества упорядочены, как списки, и цникальны, как множества. У них есть пары «поле-значение», такие как хэши, но их поля представляют собой числовые оценки, которые обозначают порядок значений, а не простые строки. Вы можете думать о сортированных наборах как о очереди с приоритетом произвольного доступа.

Мы хотим отслеживать популярность конкретных шорткодов. Каждый раз, когда кто-то посещает URL-адрес, оценка увеличивается. Как и хэш, для добавления значения в отсортированный набор требуется два значения после имени ключа Redis: оценка и член.
> ZADD visits 500 7wks 9 gog 9999 prag
для увеличения счетчика
> ZINCRBY visits 1 prag
для уменьшения счетчика
> ZINCRBY visits 1 prag
-------------------------------------
Ranges  стр 268

Диапазоны. 
















