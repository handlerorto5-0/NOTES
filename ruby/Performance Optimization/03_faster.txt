Глава 3. Как сделать Rails быстрее. стр 39

ActiveRecord - это обёртка для данных.
(Thing has_many Minions)
Загружайте только те атрибуты, которые вам нужны
Thing.all.select([:id, :col1, :col5])
Предварительная загрузка агрессивно
Thing.all.includes(:minions)
Объедините выборочную загрузку атрибутов и предварительную загрузку
Мы можем использовать специфичную для PostgreSQL функцию array_agg, которая объединяет массив столбцов из объединенной таблицы.
query = "select id, col1, array_agg(mcol4) from things"
Thing.find_by_sql(query)
* Thing.all.includes(:minions).select("col1", "minions.mcol4").load - не будет работать

Используйте Each! Шаблон для Rails с find_each и find_in_batches

Использование ActiveRecord без создания экземпляров моделей
Если все, что вам нужно, это выполнить запрос к базе данных или обновить столбец в таблице, рассмотрите возможность использования следующих функций ActiveRecord, которые не создают экземпляры моделей.
- ActiveRecord::Base.connection.execute("select * from things") Эта функция выполняет запрос и возвращает его результат без анализа.
- ActiveRecord::Base.connection.select_values("select col5 from things") Аналогично предыдущей функции, но возвращает массив значений только из первого столбца результата запроса.
- Thing.all.pluck(:col1, :col5) Вариант двух предыдущих функций. Возвращает массив значений, который содержит либо всю строку, либо столбцы, которые вы указали в аргументах для извлечения.
- Thing.where("id < 10").update_all(col1: 'something') Обновляет столбцы в таблице.

==================================
Сделайте ActionView быстрее

отключение логов config.log_level =: warn, даёт скорости, но это чревато

Избегайте небезопасных помощников и функций:
- будьте осторожны при использовании их в цикле, особенно с link_to, url_for и img_tag














